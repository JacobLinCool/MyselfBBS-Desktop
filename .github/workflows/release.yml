name: Release

on:
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  build_macos:
    name: Build MacOS App
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Yarn
        run: npm i -g yarn

      - name: Install Dependencies
        run: yarn install

      - name: Build App
        run: yarn build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-app
          path: out/make/*.dmg

  build_windows:
    name: Build Windows App
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Yarn
        run: npm i -g yarn

      - name: Install Dependencies
        run: yarn install

      - name: Build App
        run: yarn build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-app
          path: out/make/squirrel.windows/x64/*Setup.exe

  pre_release:
    name: Pre Release
    runs-on: ubuntu-latest
    needs:
      - build_macos
      - build_windows
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - run: mkdir -p out

      - name: Download MacOS App
        uses: actions/download-artifact@v3
        with:
          name: macos-app
          path: macos-app

      - name: Download Windows App
        uses: actions/download-artifact@v3
        with:
          name: windows-app
          path: windows-app

      - name: Publish Pre-Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          files: |
            macos-app/*
            windows-app/*
            LICENSE

  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.event.ref, 'refs/tags/v')
    needs:
      - build_macos
      - build_windows
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - run: mkdir -p out

      - name: Download MacOS App
        uses: actions/download-artifact@v3
        with:
          name: macos-app
          path: macos-app

      - name: Download Windows App
        uses: actions/download-artifact@v3
        with:
          name: windows-app
          path: windows-app

      - name: Publish Release
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            macos-app/*
            windows-app/*
            LICENSE
